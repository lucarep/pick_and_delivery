;; Auto-generated. Do not edit!


(when (boundp 'prog_pkg::IsLoaded)
  (if (not (find-package "PROG_PKG"))
    (make-package "PROG_PKG"))
  (shadow 'IsLoaded (find-package "PROG_PKG")))
(unless (find-package "PROG_PKG::ISLOADED")
  (make-package "PROG_PKG::ISLOADED"))
(unless (find-package "PROG_PKG::ISLOADEDREQUEST")
  (make-package "PROG_PKG::ISLOADEDREQUEST"))
(unless (find-package "PROG_PKG::ISLOADEDRESPONSE")
  (make-package "PROG_PKG::ISLOADEDRESPONSE"))

(in-package "ROS")





(defclass prog_pkg::IsLoadedRequest
  :super ros::object
  :slots ())

(defmethod prog_pkg::IsLoadedRequest
  (:init
   (&key
    )
   (send-super :init)
   self)
  (:serialization-length
   ()
   (+
    0
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;;
   self)
  )

(defclass prog_pkg::IsLoadedResponse
  :super ros::object
  :slots (_result ))

(defmethod prog_pkg::IsLoadedResponse
  (:init
   (&key
    ((:result __result) 0)
    )
   (send-super :init)
   (setq _result (round __result))
   self)
  (:result
   (&optional __result)
   (if __result (setq _result __result)) _result)
  (:serialization-length
   ()
   (+
    ;; int64 _result
    8
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; int64 _result
#+(or :alpha :irix6 :x86_64)
       (progn (sys::poke _result (send s :buffer) (send s :count) :long) (incf (stream-count s) 8))
#-(or :alpha :irix6 :x86_64)
       (cond ((and (class _result) (= (length (_result . bv)) 2)) ;; bignum
              (write-long (ash (elt (_result . bv) 0) 0) s)
              (write-long (ash (elt (_result . bv) 1) -1) s))
             ((and (class _result) (= (length (_result . bv)) 1)) ;; big1
              (write-long (elt (_result . bv) 0) s)
              (write-long (if (>= _result 0) 0 #xffffffff) s))
             (t                                         ;; integer
              (write-long _result s)(write-long (if (>= _result 0) 0 #xffffffff) s)))
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; int64 _result
#+(or :alpha :irix6 :x86_64)
      (setf _result (prog1 (sys::peek buf ptr- :long) (incf ptr- 8)))
#-(or :alpha :irix6 :x86_64)
      (setf _result (let ((b0 (prog1 (sys::peek buf ptr- :integer) (incf ptr- 4)))
                  (b1 (prog1 (sys::peek buf ptr- :integer) (incf ptr- 4))))
              (cond ((= b1 -1) b0)
                     ((and (= b1  0)
                           (<= lisp::most-negative-fixnum b0 lisp::most-positive-fixnum))
                      b0)
                    ((= b1  0) (make-instance bignum :size 1 :bv (integer-vector b0)))
                    (t (make-instance bignum :size 2 :bv (integer-vector b0 (ash b1 1)))))))
   ;;
   self)
  )

(defclass prog_pkg::IsLoaded
  :super ros::object
  :slots ())

(setf (get prog_pkg::IsLoaded :md5sum-) "9b05623554ab950ed237d43d45f0b4dd")
(setf (get prog_pkg::IsLoaded :datatype-) "prog_pkg/IsLoaded")
(setf (get prog_pkg::IsLoaded :request) prog_pkg::IsLoadedRequest)
(setf (get prog_pkg::IsLoaded :response) prog_pkg::IsLoadedResponse)

(defmethod prog_pkg::IsLoadedRequest
  (:response () (instance prog_pkg::IsLoadedResponse :init)))

(setf (get prog_pkg::IsLoadedRequest :md5sum-) "9b05623554ab950ed237d43d45f0b4dd")
(setf (get prog_pkg::IsLoadedRequest :datatype-) "prog_pkg/IsLoadedRequest")
(setf (get prog_pkg::IsLoadedRequest :definition-)
      "---
int64 result
")

(setf (get prog_pkg::IsLoadedResponse :md5sum-) "9b05623554ab950ed237d43d45f0b4dd")
(setf (get prog_pkg::IsLoadedResponse :datatype-) "prog_pkg/IsLoadedResponse")
(setf (get prog_pkg::IsLoadedResponse :definition-)
      "---
int64 result
")



(provide :prog_pkg/IsLoaded "9b05623554ab950ed237d43d45f0b4dd")


